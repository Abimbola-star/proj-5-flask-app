---
- name: Check if Amazon Linux
  shell: cat /etc/os-release | grep -q "Amazon Linux"
  register: is_amazon_linux
  changed_when: false
  ignore_errors: true

- name: Install Python, pip, and Nginx on Amazon Linux
  block:
    - name: Install nginx from amazon-linux-extras
      command: amazon-linux-extras install -y nginx1
      changed_when: true
    
    - name: Install Python3 and pip on Amazon Linux
      yum:
        name:
          - python3
          - python3-pip
        state: present
  when: is_amazon_linux is succeeded and is_amazon_linux.rc == 0

- name: Install Python, pip, and Nginx on other systems
  block:
    - name: Try installing with yum
      yum:
        name:
          - python3
          - python3-pip
          - nginx
        state: present
      register: yum_result
      ignore_errors: true
      when: ansible_pkg_mgr == "yum" or ansible_pkg_mgr == "dnf"
    
    - name: Try installing with apt
      apt:
        name:
          - python3
          - python3-pip
          - nginx
        state: present
        update_cache: yes
      when: (yum_result is defined and yum_result.failed) or ansible_pkg_mgr == "apt"
  when: is_amazon_linux is failed or is_amazon_linux.rc != 0

- name: Ensure Nginx is started and enabled
  systemd:
    name: nginx
    state: started
    enabled: yes
  ignore_errors: true

- name: Install Python packages
  pip:
    name:
      - flask
      - gunicorn
      - prometheus_client
    executable: pip3
    state: present
  ignore_errors: true

- name: Create Flask app directory
  file:
    path: /opt/flask_dashboard
    state: directory
    owner: ec2-user
    group: ec2-user
    mode: '0755'
  ignore_errors: true

- name: Create simple Flask app file
  copy:
    dest: /opt/flask_dashboard/app.py
    content: |
      from flask import Flask
      app = Flask(__name__)

      @app.route('/')
      def dashboard():
          return '''
          <html>
              <head>
                  <title>CEEYIT Dashboard</title>
                  <style>
                      body { font-family: Arial; background: #fefefe; text-align: center; margin-top: 100px; }
                      h1 { color: #2a9d8f; }
                      p { font-size: 18px; color: #264653; }
                  </style>
              </head>
              <body>
                  <h1>CEEYIT Monitoring Dashboard</h1>
                  <p>Your DevOps metrics will be visualized here.</p>
              </body>
          </html>
          '''

      if __name__ == '__main__':
          app.run(host='0.0.0.0', port=5000)
    owner: ec2-user
    group: ec2-user
    mode: '0644'
  ignore_errors: true

- name: Create requirements.txt
  copy:
    dest: /opt/flask_dashboard/requirements.txt
    content: |
      flask
      gunicorn
      prometheus_client
    owner: ec2-user
    group: ec2-user
    mode: '0644'
  ignore_errors: true

- name: Create systemd service for Gunicorn
  copy:
    dest: /etc/systemd/system/flaskapp.service
    content: |
      [Unit]
      Description=Gunicorn Flask Dashboard
      After=network.target

      [Service]
      User=ec2-user
      WorkingDirectory=/opt/flask_dashboard
      ExecStart=/usr/local/bin/gunicorn --workers 3 --bind 0.0.0.0:8000 app:app
      Restart=always

      [Install]
      WantedBy=multi-user.target
    mode: '0644'
  ignore_errors: true

- name: Reload systemd and start flaskapp
  block:
    - name: Reload systemd daemon
      systemd:
        daemon_reload: yes
    
    - name: Enable and start flaskapp service
      systemd:
        name: flaskapp
        state: started
        enabled: yes
  ignore_errors: true

- name: Configure Nginx
  copy:
    dest: /etc/nginx/conf.d/flaskapp.conf
    content: |
      server {
        listen 80;
        server_name _;

        location / {
          proxy_pass http://127.0.0.1:8000;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
        }
      }
    mode: '0644'
  ignore_errors: true

- name: Restart Nginx
  systemd:
    name: nginx
    state: restarted
  ignore_errors: true
...